---
# Source: ibm-ace-server-icp4i-prod/templates/deployment.yaml
# Â© Copyright IBM Corporation 2019
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-integration-server-ibm-ace-server-icp4i-prod
  labels:
    app.kubernetes.io/name: "ibm-ace-server-icp4i-prod"
    helm.sh/chart: "ibm-ace-server-icp4i-prod"
    app.kubernetes.io/managed-by: "Tiller"
    app.kubernetes.io/instance: "my-integration-server"
    release: "my-integration-server"
  annotations:
    appconnectenterprise: 'icp4i'
    serverName: "myintegrationserver"
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "ibm-ace-server-icp4i-prod"
      helm.sh/chart: "ibm-ace-server-icp4i-prod"
      app.kubernetes.io/managed-by: "Tiller"
      app.kubernetes.io/instance: "my-integration-server"
      release: "my-integration-server"
  template:
    metadata:
      annotations:        
        cloudpakName: "IBM Cloud Pak for Integration"
        cloudpakVersion: "2019.4.1"
        cloudpakid: "c8b82d189e7545f0892db9ef2731b90d"
        productID: "606f1a9feb4f4cbc85b17a637f6a6b24"
        productName: "IBM Cloud Pak for Integration - IBM App Connect Enterprise (Chargeable)"
        productVersion: "11.0.0.6"
      name: my-integration-server-ibm-ace-server-icp4i-prod
      labels:
        app.kubernetes.io/name: "ibm-ace-server-icp4i-prod"
        helm.sh/chart: "ibm-ace-server-icp4i-prod"
        app.kubernetes.io/managed-by: "Tiller"
        app.kubernetes.io/instance: "my-integration-server"
        release: "my-integration-server"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      serviceAccountName: my-integration-server-ibm-ace-server-icp4i-prod-serviceaccount
      imagePullSecrets:
        - name: ibm-entitlement-key
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1001
      containers:
        - name: my-integration-server-ibm-ace-server-icp4i-prod
          image: "cp.icr.io/cp/icp4i/ace/ibm-ace-server-prod:11.0.0.6.1-amd64"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 7600
            name: webui
          - containerPort: 7800
            name: ace-http
          - containerPort: 7843
            name: ace-https
          env:
            - name: LICENSE
              value: "accept"
            - name: USE_QMGR
              value: "false"
            - name: DEV_QMGR
              value: "false"
            - name: ACE_SERVER_NAME
              value: "myintegrationserver"
            - name: SERVICE_NAME
              value: my-integration-server-ibm-ace-server-icp4i-prod
            - name: DEFAULT_CONTENT_SERVER
              value: "true"
            - name: LOG_FORMAT
              value: "basic"
            - name: ACE_ENABLE_METRICS
              value: "true"
            - name: ACE_ENABLE_OPEN_TRACING
              value: "false"
            - name: ACE_HTTP_ROUTE_NAME
              value: my-integration-server-http
            - name: ACE_HTTPS_ROUTE_NAME
              value: my-integration-server-https
            - name: ACE_ENDPOINT_TYPE
              value: http
            - name: "ACE_KEYSTORE_PASSWORD"
              valueFrom:
                 secretKeyRef:
                   name: my-integration-server-config
                   optional: true
                   key: keystorePassword
            - name: "ACE_TRUSTSTORE_PASSWORD"
              valueFrom:
                 secretKeyRef:
                   name: my-integration-server-config
                   optional: true
                   key: truststorePassword
            - name: ACE_DEFAULT_APPLICATION_NAME
              value: "<nil>"
            - name: ACE_ADMIN_SERVER_SECURITY
              value: "false"
          volumeMounts:
            - name: odbcini
              mountPath: "/home/aceuser/initial-config/odbcini"
            - name: policy
              mountPath: "/home/aceuser/initial-config/policy"
            - name: serverconf
              mountPath: "/home/aceuser/initial-config/serverconf"
            - name: setdbparms
              mountPath: "/home/aceuser/initial-config/setdbparms"
            - name: extensions
              mountPath: "/home/aceuser/initial-config/extensions"
            - name: agent
              mountPath: "/home/aceuser/initial-config/agent"
            - name: ssl
              mountPath: "/home/aceuser/initial-config/ssl"
            - name: tmp
              mountPath: "/tmp"
            - name: workdir
              mountPath: "/home/aceuser/ace-server"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            privileged: false
            capabilities:
              add:
                - SETPCAP
                - AUDIT_WRITE
                - CHOWN
                - NET_RAW
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - KILL
                - SETUID
                - SETGID
                - NET_BIND_SERVICE
                - SYS_CHROOT
                - SETFCAP
              drop:
                - ALL
          # Set liveness probe to determine if the Integration Server is running
          livenessProbe:
            exec:
              command:
              - chkacehealthy
            initialDelaySeconds: 360
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 1
          # Set readiness probe to determine if the Integration Server admin endpoint is running
          readinessProbe:
            exec:
              command:
              - chkaceready
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
          resources:
            limits:
              cpu: "1"
              memory: 1024Mi
              
            requests:
              cpu: 200m
              memory: 256Mi
              
        - name: "my-integration-server-ibm-ace-server-icp4i-prod-designer-flows"
          image: "cp.icr.io/cp/icp4i/ace/ibm-ace-designer-flows-prod:11.0.0.6.1-amd64"
          imagePullPolicy: IfNotPresent
          env:
            - name: ACE_VERSION
              value: 
            - name: bunyan__logfile__filename
              value: "/opt/ibm/app/ace-server/log/integration_server.myintegrationserver.designer_flows.txt"
            - name: DESIGNER_FLOWS_OPERATION_MODE
              value: local
          volumeMounts:
            - name: tmp
              mountPath: "/tmp"
            - name: workdir
              mountPath: "/opt/ibm/app/ace-server"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            privileged: false
            capabilities:
              drop:
                - ALL
          # Set liveness probe to determine if the designer flow sidecar is running
          livenessProbe:
            exec:
              command:
                - "/readiness/ready.sh"
            initialDelaySeconds: 360
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 1
          # Set readiness probe to determine if the designer flow sidecar is running
          readinessProbe:
            exec:
              command:
                - "/readiness/ready.sh"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
              
            requests:
              cpu: 50m
              memory: 32Mi
              
        - name: "my-integration-server-ibm-ace-server-icp4i-prod-connectors"
          image: "cp.icr.io/cp/icp4i/ace/ibm-ace-lcp-prod:11.0.0.6.1-amd64"
          imagePullPolicy: IfNotPresent
          env:
            - name: ACE_VERSION
              value: 
            - name: CONNECTOR_CREDENTIAL
              value: "/opt/ibm/app/credentials"
            - name: bunyan__logfile__filename
              value: "/opt/ibm/app/ace-server/log/integration_server.myintegrationserver.connectors.txt"
          volumeMounts:
            - name: credentials
              mountPath: "/opt/ibm/app/credentials"
            - name: tmp
              mountPath: "/tmp"
            - name: workdir
              mountPath: "/opt/ibm/app/ace-server"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            privileged: false
            capabilities:
              drop:
                - ALL
          # Set liveness probe to determine if the designer flow sidecar is running
          livenessProbe:
            exec:
              command:
                - "/readiness/readyLCP.sh"
            initialDelaySeconds: 360
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 1
          # Set readiness probe to determine if the designer flow sidecar is running
          readinessProbe:
            exec:
              command:
                - "/readiness/readyLCP.sh"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
          resources:
            limits:
              cpu: "1"
              memory: 768Mi
              
            requests:
              cpu: 150m
              memory: 200Mi
               
      volumes:
        - name: odbcini
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: odbcini
              path: odbc.ini
        - name: extensions
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: extensions
              path: extensions.zip
        - name: agent
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: agentc
              path: agentc.json
            - key: agentp
              path: agentp.json
            - key: agentx
              path: agentx.json
            - key: switch
              path: switch.json
        - name: policy
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: policy
              path: default.policyxml
            - key: policyDescriptor
              path: policy.descriptor
        - name: serverconf
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: serverconf
              path: server.conf.yaml
        - name: setdbparms
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: setdbparms
              path: setdbparms.txt
        - name: ssl
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: ca.crt
              path: ca.crt.pem
            - key: tls.key
              path: tls.key.pem
            - key: tls.crt
              path: tls.crt.pem
        - name: credentials
          secret:
            secretName: my-integration-server-config
            optional: true
            items:
            - key: credentials
              path: credentials.yaml
        - name: tmp
          emptyDir: {}
        - name: workdir
          emptyDir: {}
